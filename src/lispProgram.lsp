(setq var 10)
(setq varr * 10 3)
(setq varrr + var varr)
(* (+ 5 6) (+ 4 9))
(+ 5 9)
(+ (* 9 4) (* 3 2))
(* (* 9 4) (* 3 2))
(- (* 9 4) (* 3 2))
(+ var 5)
(quote 5)
(' Kiesling pijije)
(> 10 5)
(equals 10 10)
(equals var 10)
(Atom x)
(Atom (1 2 3))
(List (x))
(List (1 2 3))
(Cond (equals var + 5 5)(* 6 3)(* 5 6))
(print var)
(defun name x,y (print x) (print y))
(name (var 5))
(defun fact x (Cond (equals x 1) (print 1) (* x fact (- 1 x))))
(fact (6))